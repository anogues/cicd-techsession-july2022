trigger:
  branches:
    include:
    - '*'

  tags:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-18.04'

variables:
  Azure.ServiceConnectionId: 'cicd'

stages:
- stage: onPush
  condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  jobs:
  - job: onPushJob
    timeoutInMinutes: 20
    cancelTimeoutInMinutes: 10
    steps:
    - script: env | sort
      displayName: 'Environment / Context'
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.7'
      inputs:
        versionSpec: 3.7

    - checkout: self
      persistCredentials: true
      clean: true
      displayName: 'Checkout & Build.Reason: $(Build.Reason) & Build.SourceBranchName: $(Build.SourceBranchName)'

    - script: |
        echo "[QA]" >> ~/.databrickscfg
        echo "host = $QA_HOST" >> ~/.databrickscfg
        echo "token = $QA_TOKEN" >> ~/.databrickscfg
      env:
        QA_HOST: $(QA_HOST)
        QA_TOKEN: $(QA_TOKEN)
      displayName: 'Set up Databricks cli for QA workspace'

    # TODO add libraries in the update-test-jobs-confs step instead of here
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements-cicd.txt
      displayName: 'Install python dependencies'

    - script: |
        python setup.py sdist bdist_wheel
      displayName: 'Build python module'

    - script: |
        databricks fs cp -r --overwrite $(Build.Repository.LocalPath)/dist \
        dbfs:/projects/cicd-smoother/$(Build.SourceBranchName)/wheel/versions --profile QA
      displayName: 'Copy build to QA DBFS'

    - script: |
        databricks workspace import_dir -o -e $(Build.Repository.LocalPath) /projects/cicd-smoother/ --profile QA
      displayName: 'Copy test notebooks to QA workspace'

    - script: |
        python $(Build.Repository.LocalPath)/cicd/cicd-scripts/update-dlt-pipeline.py \
        --url $QA_HOST --pat $QA_TOKEN \
        --notebook /projects/cicd-smoother/tests/notebooks/dlt_pipeline \
        --pipeline_id 72d401c0-fcd3-4c39-8dd0-d9778fd42376 \
        --branch_name $(Build.SourceBranchName)
      env:
        QA_HOST: $(QA_HOST)
        QA_TOKEN: $(QA_TOKEN)
      displayName: 'Update DLT pipeline source code'

    - script: |
        python $(Build.Repository.LocalPath)/cicd/cicd-scripts/start-dlt-pipeline.py \
        --url $QA_HOST --pat $QA_TOKEN \
        --pipeline_id 72d401c0-fcd3-4c39-8dd0-d9778fd42376
      env:
        QA_HOST: $(QA_HOST)
        QA_TOKEN: $(QA_TOKEN)
      displayName: 'Start DLT pipeline'

    - script: |
        python $(Build.Repository.LocalPath)/cicd/cicd-scripts/update-test-jobs-confs.py \
        --url $QA_HOST --pat $QA_TOKEN \
        --notebook /projects/cicd-smoother/tests/notebooks/test_runner \
        --wheel $(Build.Repository.LocalPath)/dist \
        --jobid 1017991187895013 \
        --branch_name $(Build.SourceBranchName)
      env:
        QA_HOST: $(QA_HOST)
        QA_TOKEN: $(QA_TOKEN)
      displayName: 'Update unit tests job configuration'
    
    - script: databricks fs rm -r  dbfs:/tmp/$(Build.SourceBranchName)/test-reports/ --profile QA
      displayName: 'Remove old test reports from dbfs'

    - script: |
        python $(Build.Repository.LocalPath)/cicd/cicd-scripts/execute-job.py \
        --url $QA_HOST --pat $QA_TOKEN \
        --jobid 1017991187895013 \
        --branch_name "$(Build.SourceBranchName)" --test_type "unit"
      env:
        QA_HOST: $(QA_HOST)
        QA_TOKEN: $(QA_TOKEN)
      displayName: 'Run unit tests job'

    - script: databricks fs cp -r  dbfs:/tmp/$(Build.SourceBranchName)/test-reports/xml/ . --profile QA
      displayName: 'Get new test reports from dbfs'
    
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '*.xml' 
        failTaskOnFailedTests: true

  - job: OnPullRequestJob
    dependsOn: onPushJob
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    steps:
    - script: env | sort
      displayName: 'Environment / Context'

    - task: UsePythonVersion@0
      displayName: 'Use Python 3.7'
      inputs:
        versionSpec: 3.7

    - checkout: self
      persistCredentials: true
      clean: true
      displayName: 'Checkout & Build.Reason: $(Build.Reason) & Build.SourceBranchName: $(Build.SourceBranchName)'

    - script: |
        echo "[QA]" >> ~/.databrickscfg
        echo "host = $QA_HOST" >> ~/.databrickscfg
        echo "token = $QA_TOKEN" >> ~/.databrickscfg
      env:
        QA_HOST: $(QA_HOST)
        QA_TOKEN: $(QA_TOKEN)
      displayName: 'Set up Databricks cli for QA workspace'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements-cicd.txt
      displayName: 'Install python dependencies'

    - script: python setup.py sdist bdist_wheel
      displayName: 'Build python module'

    # TODO use parameter instead of cicd-smoother -here and all around this file
    - script: |
        databricks fs cp -r --overwrite $(Build.Repository.LocalPath)/dist \
        dbfs:/projects/cicd-smoother/$(Build.SourceBranchName)/wheel/versions --profile QA
      displayName: 'Copy build to QA DBFS'

    - script: databricks workspace import_dir -o -e $(Build.Repository.LocalPath) /projects/cicd-smoother/ --profile QA
      displayName: 'Copy test notebooks to QA workspace'

    # TODO put unit tests and integration tests under different jobs
    - script: |
        python $(Build.Repository.LocalPath)/cicd/cicd-scripts/update-test-jobs-confs.py \
        --url $QA_HOST --pat $QA_TOKEN \
        --notebook /projects/cicd-smoother/tests/notebooks/test_runner \
        --wheel $(Build.Repository.LocalPath)/dist \
        --jobid 1017991187895013 \
        --branch_name $(Build.SourceBranchName)
      env:
        QA_HOST: $(QA_HOST)
        QA_TOKEN: $(QA_TOKEN)
      displayName: 'Update integration tests job configuration'
      timeoutInMinutes: 10

    - script: |
        python $(Build.Repository.LocalPath)/cicd/cicd-scripts/execute-job.py \
        --url $QA_HOST --pat $QA_TOKEN \
        --jobid 1017991187895013 \
        --branch_name "$(Build.SourceBranchName)" --test_type "integration"
      env:
        QA_HOST: $(QA_HOST)
        QA_TOKEN: $(QA_TOKEN)
      displayName: 'Run integration tests job'
      timeoutInMinutes: 10


- stage: onRelease
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  jobs:
  - job: onReleaseJob
    pool:
      vmImage: 'ubuntu-18.04'

    steps:
      - script: env | sort
        displayName: 'Environment / Context'

      - task: UsePythonVersion@0
        displayName: 'Use Python 3.7'
        inputs:
          versionSpec: 3.7

      - checkout: self
        persistCredentials: true
        clean: true
        displayName: 'Checkout & Build.Reason: $(Build.Reason) & Build.SourceBranchName: $(Build.SourceBranchName)'

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements-cicd.txt
        displayName: 'Install python dependencies'

      - script: |
          mkdir -p $(Build.ArtifactStagingDirectory)/projects/cicd-smoother/
          cp -r $(Build.Repository.LocalPath)/* $(Build.ArtifactStagingDirectory)/projects/cicd-smoother/
        displayName: 'Copy notebooks, model.json, and transition scripts to common directory'

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)/projects/cicd-smoother/'
          ArtifactName: '$(Build.Repository.Name)'